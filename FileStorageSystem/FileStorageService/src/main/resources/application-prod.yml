# Production configuration
server:
  port: 8080
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/octet-stream
  http2:
    enabled: true

spring:
  # Production database configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:file_storage}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # Production JPA configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
  
  # Production Redis configuration
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: -1ms
      shutdown-timeout: 200ms

# Production GCS configuration
gcs:
  project:
    id: ${GCS_PROJECT_ID}
  bucket:
    name: ${GCS_BUCKET_NAME}
  credentials:
    path: ${GCS_CREDENTIALS_PATH}

# Production file storage configuration
file-storage:
  max-file-size: 1073741824 # 1GB
  chunk-size: 10485760 # 10MB
  upload-timeout: 7200 # 2 hours
  download-timeout: 600 # 10 minutes
  cleanup:
    enabled: true
    interval: 1800000 # 30 minutes
    failed-upload-retention-days: 3
    access-log-retention-days: 30

# Production logging configuration
logging:
  level:
    root: WARN
    com.feng.storage: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/file-storage-service/application.log
    max-size: 100MB
    max-history: 30

# Production management configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      probes:
        enabled: true
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99
      slo:
        http.server.requests: 50ms,100ms,200ms,500ms,1s,2s,5s

# Security configuration
security:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 3600 # 1 hour
  rate-limit:
    enabled: true
    requests-per-minute: 100
    burst-capacity: 200
